<ServerManagerConfiguration>
    <!-- ==================================================================== -->
    <ProxyGroup name="shape_detection">
        <Proxy
            class="stkCGALEfficientRANSAC"
            name="CGALEfficientRANSACProxy">

            <Documentation
            short_help="Detects plane shaped regions within a vtkPolyData"
            long_help="CGAL efficient RANSAC method appends a point data array regions filled with the detected
                region indices or -1 if the point is not assigned to a region. 
                Note : This algorithm is not deterministic" />

            <InputProperty
                name="Input"
                port_index="0"
                command="SetInputConnection">
                <ProxyGroupDomain name="groups">
                    <Group name="sources" />
                    <Group name="filters" />
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkDataSet" />
                </DataTypeDomain>
                <InputArrayDomain
                name="PointNormalsArray"
                attribute_type="point"
                number_of_components="3"
                optional = "1" /> 
                <!-- Optional flag is assigned so that we can instantiate the class -->
            </InputProperty>

            <StringVectorProperty
                name="PointNormalsArrayName"
                label="Point Normals Array Name"
                command="SetPointNormalsArrayName"
                default_values="Normals"
                number_of_elements="1">
                <ArrayListDomain
                    name="normals_array_list"
                    none_string="None"
                    input_domain_name="PointNormalsArray">
                    <RequiredProperties>
                        <Property
                            name="Input"
                            function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Point Normal Array used for Shape Detection  
                </Documentation>
            </StringVectorProperty>

            <IntVectorProperty
                name="NumberOfRuns"
                command="SetNumberOfRuns"
                number_of_elements="1"
                default_values="5">
                <IntRangeDomain
                    min="0"
                    name="range" />
                <Documentation>
                The algorithm will perform detection several times
                and choose the result with the highest coverage
                (i.e. ratio of the points assigned to a shape).
            </Documentation>
            </IntVectorProperty>

            <IntVectorProperty
            name="MinPointsInputType"
            command="SetMinPointsInputType"
            number_of_elements="1"
            default_values="0">
            <EnumerationDomain name="enum">
                <Entry
                    text="MIN_POINTS_PERCENTAGE"
                    value="0" />
                <Entry
                    text="MIN_POINTS_NUMBER"
                    value="1" />
            </EnumerationDomain>
            <Documentation>
                Set the Method for calculation of MinPoints
            </Documentation>
            </IntVectorProperty>

            <DoubleVectorProperty
                name="MinPoints"
                command="SetMinPoints"
                number_of_elements="1"
                default_values="2.5">
                <DoubleRangeDomain
                    min="0"
                    name="range" />
                <Documentation>
                Set the minimum number of points in a shape.
            </Documentation>
            </DoubleVectorProperty>

            <DoubleVectorProperty
                name="Probability"
                command="SetProbability"
                number_of_elements="1"
                default_values="0.05">
                <DoubleRangeDomain
                    min="0.0"
                    max="1.0"
                    name="range" />
                <Documentation>
                Set the probability to miss the largest primitive at each iteration. Probability to control search endurance.
                A lower probability provides a higher reliability and determinism at the cost of longer running time due to a higher search endurance.
            </Documentation>
            </DoubleVectorProperty>

            <IntVectorProperty
            name="EpsilonInputType"
            command="SetEpsilonInputType"
            number_of_elements="1"
            default_values="1">
            <EnumerationDomain name="enum">
                <Entry
                    text="EPSILON_PERCENTAGE"
                    value="0" />
                <Entry
                    text="EPSILON_VALUE"
                    value="1" />
            </EnumerationDomain>
            <Documentation>
                Set the Method for calculation of Epsilon
            </Documentation>
            </IntVectorProperty>

            <DoubleVectorProperty
                name="Epsilon"
                command="SetEpsilon"
                number_of_elements="1"
                default_values="1">
                <DoubleRangeDomain
                    min="0.0"
                    name="range" />
                <Documentation>
                Set the maximum acceptable Euclidean distance between a point and a shape.
            </Documentation>
            </DoubleVectorProperty>

            <IntVectorProperty
            name="ClusterEpsilonInputType"
            command="SetClusterEpsilonInputType"
            number_of_elements="1"
            default_values="1">
            <EnumerationDomain name="enum">
                <Entry
                    text="CLUSTER_EPSILON_PERCENTAGE"
                    value="0" />
                <Entry
                    text="CLUSTER_EPSILON_VALUE"
                    value="1" />
            </EnumerationDomain>
            <Documentation>
                Set the Method for calculation of ClusterEpsilon
            </Documentation>
            </IntVectorProperty>

            <DoubleVectorProperty
                name="ClusterEpsilon"
                command="SetClusterEpsilon"
                number_of_elements="1"
                default_values="3">
                <DoubleRangeDomain
                    min="0.0"
                    name="range" />
                <Documentation>
                Set the maximum acceptable Euclidean distance between points, which are assumed to be neighbors.
            </Documentation>
            </DoubleVectorProperty>

            <DoubleVectorProperty
                name="MaxNormalThreshold"
                command="SetMaxNormalThreshold"
                number_of_elements="1"
                default_values="0.95">
                <DoubleRangeDomain
                    min="0.0"
                    max="1.0"
                    name="range" />
                <Documentation>
                Set the maximum threshold on the dot product between the estimated shape's normal and
                the point's normal, that is the cosine of the angle e.g (cos(25Â°) = 0.9).
            </Documentation>
            </DoubleVectorProperty>

            <StringVectorProperty
                name="RegionsArrayName"
                label="Regions Array Name"
                command="SetRegionsArrayName"
                default_values="Regions"
                number_of_elements="1"
                panel_visibility="advanced">
                <Documentation>
                    Set Regions Array Name
                </Documentation>
            </StringVectorProperty>

            <IntVectorProperty
            name="CalculateDistanceFromPlane"
            command="SetCalculateDistanceFromPlane"
            number_of_elements="1"
            default_values="0"
            panel_visibility="advanced">
            <BooleanDomain name="bool" />
            <Documentation>
                Enable/Disable Distance from Plane Calculations for points assigned to detected planes.
                For ussinged points, distance values is -1.
            </Documentation>
            </IntVectorProperty>

            <StringVectorProperty
            name="DistanceFromPlaneArrayName"
            label="Distance From Plane Array Name"
            command="SetDistanceFromPlaneArrayName"
            default_values="DistanceFromPlane"
            number_of_elements="1"
            panel_visibility="advanced">
            <Hints>
                <PropertyWidgetDecorator
                    type="GenericDecorator"
                    mode="visibility"
                    property="CalculateDistanceFromPlane"
                    value="1" />
            </Hints>
            <Documentation>
                Set Distance From Plane Array Name
            </Documentation>
            </StringVectorProperty>

            <DoubleVectorProperty
            name="PointSearchTolerance"
            command="SetPointSearchTolerance"
            number_of_elements="1"
            default_values="0.001"
            panel_visibility="advanced">
            <DoubleRangeDomain
                min="0.0"
                name="range" />
            <Documentation>
                Set Point Search Tolerance used for mapping the detected points to the input mesh. This should be very close to 0.
            </Documentation>
            </DoubleVectorProperty>

            <IntVectorProperty
            name="Kernel"
            command="SetKernelValue"
            number_of_elements="1"
            default_values="1"
            panel_visibility="advanced">
            <EnumerationDomain name="enum">
                <Entry
                    text="EPIC"
                    value="1" />
                <Entry
                    text="Cartesian"
                    value="2" />
                <Entry
                    text="Simple_cartesian"
                    value="3" />
            </EnumerationDomain>
            <Documentation>
                Set KernelEnum. Depending on the CGAL kernel chosen,
                the compute time and the output regions may vary.
        </Documentation>
        </IntVectorProperty>

            <PropertyGroup label="Efficient RANSAC Parameters">
                <Property name="Probability" />
                <Property name="MinPointsInputType" />
                <Property name="MinPoints" />
                <Property name="EpsilonInputType" />
                <Property name="Epsilon" />
                <Property name="ClusterEpsilonInputType" />
                <Property name="ClusterEpsilon" />
                <Property name="MaxNormalThreshold" />
            </PropertyGroup>

            <PropertyGroup label="Advanced">
                <Property name="RegionsArrayName" />
                <Property name="CalculateDistanceFromPlane" />
                <Property name="DistanceFromPlaneArrayName" />
                <Property name="PointSearchTolerance" />
                <Property name="Kernel" />
            </PropertyGroup>

        </Proxy>
    </ProxyGroup>
    <!-- ==================================================================== -->
    <ProxyGroup name="filters">
        <SourceProxy
            name="CGALEfficientRANSAC"
            class="stkCGALEfficientRANSAC"
            label="CGAL Shape Detection - Efficient RANSAC"
            base_proxygroup="shape_detection"
            base_proxyname="CGALEfficientRANSACProxy">

            <Hints>
                <ShowInMenu category="CGAL" />
            </Hints>
        </SourceProxy>
    </ProxyGroup>
</ServerManagerConfiguration>