<ServerManagerConfiguration>
    <!-- ==================================================================== -->
    <ProxyGroup name="shape_detection">
        <Proxy
            class="stkCGALEfficientRANSAC"
            name="CGALEfficientRANSACProxy">

            <Documentation
                long_help="todo."
                short_help="todo." />

            <InputProperty
                name="Input"
                port_index="0"
                command="SetInputConnection">
                <ProxyGroupDomain name="groups">
                    <Group name="sources" />
                    <Group name="filters" />
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkDataSet" />
                </DataTypeDomain>
                <InputArrayDomain
                name="PointNormalsArray"
                attribute_type="point"
                number_of_components="3"
                optional = "1" /> 
                <!-- Optional flag is assigned so that we can instantiate the class -->
            </InputProperty>

            <StringVectorProperty
                name="PointNormalsArrayName"
                label="Point Normals Array Name"
                command="SetPointNormalsArrayName"
                default_values="Normals"
                number_of_elements="1">
                <ArrayListDomain
                    name="normals_array_list"
                    none_string="None"
                    input_domain_name="PointNormalsArray">
                    <RequiredProperties>
                        <Property
                            name="Input"
                            function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Point Normal Array. Must be called Normals  
                </Documentation>
            </StringVectorProperty>

            <IntVectorProperty
                name="NumberOfIterations"
                command="SetNumberOfIterations"
                number_of_elements="1"
                default_values="1">
                <IntRangeDomain
                    min="1"
                    name="range" />
                <Documentation>
                The algorithm will perform detection several times
                and choose resultwith the highest coverage
                (i.e. ratio of the points assigned to a shape).
            </Documentation>
            </IntVectorProperty>
            <IntVectorProperty
                name="UserDefinedParameters"
                command="SetUserDefinedParameters"
                number_of_elements="1"
                default_values="0">
                <BooleanDomain name="bool" />
                <Documentation>
                If not checked, the algorithm will evaluate default
                values based on the mesh parameters (size, ...).
                Otherwise the user has the ability define detection parameters.
            </Documentation>
            </IntVectorProperty>
            <IntVectorProperty
                name="MinPoints"
                command="SetMinPoints"
                number_of_elements="1"
                default_values="200">
                <IntRangeDomain
                    min="0"
                    name="range" />
                <Hints>
                    <PropertyWidgetDecorator
                        type="GenericDecorator"
                        mode="visibility"
                        property="UserDefinedParameters"
                        value="1" />
                </Hints>
                <Documentation>
                Set the minimum number of points in a shape.
            </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty
                name="Probability"
                command="SetProbability"
                number_of_elements="1"
                default_values="0.05">
                <DoubleRangeDomain
                    min="0.0"
                    max="1.0"
                    name="range" />
                <Hints>
                    <PropertyWidgetDecorator
                        type="GenericDecorator"
                        mode="visibility"
                        property="UserDefinedParameters"
                        value="1" />
                </Hints>
                <Documentation>
                Set the probability to miss the largest primitive at each iteration. Probability to control search endurance.
                A lower probability provides a higher reliability and determinism at the cost of longer running time due to a higher search endurance.
            </Documentation>
            </DoubleVectorProperty>
            <DoubleVectorProperty
                name="Epsilon"
                command="SetEpsilon"
                number_of_elements="1"
                default_values="0.002">
                <DoubleRangeDomain
                    min="0.0"
                    name="range" />
                <Hints>
                    <PropertyWidgetDecorator
                        type="GenericDecorator"
                        mode="visibility"
                        property="UserDefinedParameters"
                        value="1" />
                </Hints>
                <Documentation>
                Set the maximum acceptable Euclidean distance between a point and a shape.
            </Documentation>
            </DoubleVectorProperty>
            <DoubleVectorProperty
                name="ClusterEpsilon"
                command="SetClusterEpsilon"
                number_of_elements="1"
                default_values="0.01">
                <DoubleRangeDomain
                    min="0.0"
                    name="range" />
                <Hints>
                    <PropertyWidgetDecorator
                        type="GenericDecorator"
                        mode="visibility"
                        property="UserDefinedParameters"
                        value="1" />
                </Hints>
                <Documentation>
                Set the maximum acceptable Euclidean distance between points, which are assumed to be neighbors.
            </Documentation>
            </DoubleVectorProperty>
            <DoubleVectorProperty
                name="MaxNormalDeviation"
                command="SetMaxNormalDeviation"
                number_of_elements="1"
                default_values="0.9">
                <DoubleRangeDomain
                    min="0.0"
                    max="1.0"
                    name="range" />
                <Hints>
                    <PropertyWidgetDecorator
                        type="GenericDecorator"
                        mode="visibility"
                        property="UserDefinedParameters"
                        value="1" />
                </Hints>
                <Documentation>
                Set the maximum threshold on the dot product between the estimated shape's normal and
                the point's normal, that is the cosine of the angle e.g (cos(25Â°) = 0.9).
            </Documentation>
            </DoubleVectorProperty>
        </Proxy>
    </ProxyGroup>
    <!-- ==================================================================== -->
    <ProxyGroup name="filters">
        <SourceProxy
            name="CGALEfficientRANSAC"
            class="stkCGALEfficientRANSAC"
            label="CGAL Shape Detection - Efficient RANSAC"
            base_proxygroup="shape_detection"
            base_proxyname="CGALEfficientRANSACProxy">

            <Hints>
                <ShowInMenu category="CGAL" />
            </Hints>
        </SourceProxy>
    </ProxyGroup>
</ServerManagerConfiguration>